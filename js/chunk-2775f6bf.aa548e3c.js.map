{"version":3,"sources":["webpack:///./src/views/snake.vue?781a","webpack:///./src/views/snake.vue?2dfc","webpack:///./src/config/snake.js","webpack:///src/views/snake.vue","webpack:///./src/views/snake.vue?b160","webpack:///./src/views/snake.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","_s","snakeCount","ref","attrs","timer","diffData","model","value","callback","$$v","difficult","expression","on","start","$event","isGrid","isAI","Utils","isPC","_e","stopPropagation","operating","staticRenderFns","axis","w","h","name","data","context","lattice","row","col","snake","foodInfo","path","currentPath","time","methods","init","$refs","canvasDom","getContext","width","canvas","clientWidth","height","clientHeight","fillRect","x","y","addSnake","addFood","drawLine","clearInterval","setInterval","strokeStyle","lineWidth","beginPath","moveTo","i","lineTo","closePath","stroke","fillStyle","fill","Math","floor","random","item","off","push","move","AI","shift","clearRect","isEat","gameOver","unshift","keyDown","ev","event","keyCode","code","Number","index","len","$warning","clear","mounted","style","$nextTick","window","addEventListener","destroyed","removeEventListener","component"],"mappings":"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","file":"js/chunk-2775f6bf.aa548e3c.js","sourcesContent":["import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./snake.vue?vue&type=style&index=0&id=ee50a626&lang=less&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./snake.vue?vue&type=style&index=0&id=ee50a626&lang=less&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"snake\"},[_c('div',{staticClass:\"box\"},[_c('h2',[_vm._v(_vm._s(_vm.snakeCount===6?'贪吃蛇':(\"蛇长度\" + (_vm.snakeCount-6))))]),_c('p',[_vm._v(\"小键盘 上下左右 操作\")]),_c('canvas',{ref:\"canvasDom\"}),_c('div',{staticClass:\"btn\"},[_c('fx-select',{attrs:{\"disable\":_vm.timer!==null,\"data\":_vm.diffData},model:{value:(_vm.difficult),callback:function ($$v) {_vm.difficult=$$v},expression:\"difficult\"}}),_c('fx-button',{attrs:{\"type\":\"default\"},on:{\"clickEvt\":_vm.start}},[_vm._v(_vm._s(_vm.timer===null?'开始':'重置'))]),_c('fx-button',{attrs:{\"type\":\"default\"},on:{\"clickEvt\":function($event){_vm.isGrid=!_vm.isGrid}}},[_vm._v(_vm._s(!_vm.isGrid?'格子':'无格'))]),_c('fx-button',{attrs:{\"type\":\"default\"},on:{\"clickEvt\":function($event){_vm.isAI=!_vm.isAI}}},[_vm._v(_vm._s(!_vm.isAI?'自动':'手动'))])],1),(!_vm.Utils.isPC())?_c('div',{staticClass:\"op\"},[_c('em',{on:{\"click\":function($event){$event.stopPropagation();return _vm.operating(37)}}},[_vm._v(\"左\")]),_c('span',[_c('em',{on:{\"click\":function($event){$event.stopPropagation();return _vm.operating(38)}}},[_vm._v(\"上\")]),_c('em',{on:{\"click\":function($event){$event.stopPropagation();return _vm.operating(40)}}},[_vm._v(\"下\")])]),_c('em',{on:{\"click\":function($event){$event.stopPropagation();return _vm.operating(39)}}},[_vm._v(\"右\")])]):_vm._e()])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export const axis = { w: 80, h: 80 };\r\n","<template>\r\n  <div class=\"snake\">\r\n    <div class=\"box\">\r\n      <h2>{{snakeCount===6?'贪吃蛇':`蛇长度${snakeCount-6}`}}</h2>\r\n      <p>小键盘 上下左右 操作</p>\r\n      <canvas ref=\"canvasDom\"></canvas>\r\n      <div class=\"btn\">\r\n        <fx-select :disable=\"timer!==null\" :data=\"diffData\" v-model=\"difficult\"></fx-select>\r\n        <fx-button type=\"default\" @clickEvt=\"start\">{{timer===null?'开始':'重置'}}</fx-button>\r\n        <fx-button type=\"default\" @clickEvt=\"isGrid=!isGrid\">{{!isGrid?'格子':'无格'}}</fx-button>\r\n        <fx-button type=\"default\" @clickEvt=\"isAI=!isAI\">{{!isAI?'自动':'手动'}}</fx-button>\r\n      </div>\r\n      <div class=\"op\" v-if=\"!Utils.isPC()\">\r\n        <em @click.stop=\"operating(37)\">左</em>\r\n        <span>\r\n          <em @click.stop=\"operating(38)\">上</em>\r\n          <em @click.stop=\"operating(40)\">下</em>\r\n        </span>\r\n        <em @click.stop=\"operating(39)\">右</em>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { axis } from 'config/snake.js'\r\nexport default {\r\n  name: 'snake',\r\n  data() {\r\n    return {\r\n      context: null,\r\n      // 横纵轴 条数\r\n      lattice: { w: axis.w, h: axis.h },\r\n      // 每条轴间距\r\n      row: 0,\r\n      // 每条轴间距\r\n      col: 0,\r\n      // 蛇长度\r\n      snakeCount: 6,\r\n      // 蛇数组\r\n      snake: [],\r\n      // 食物位置\r\n      foodInfo: { x: 0, y: 0 },\r\n      // 方向\r\n      path: 'toRight',\r\n      // 当前前进方向\r\n      currentPath: 39,\r\n      // 速度\r\n      time: 10,\r\n      // 定时器\r\n      timer: null,\r\n      // 是否自动跑\r\n      isAI: false,\r\n      // 是否需要网格\r\n      isGrid: true,\r\n      // 难度\r\n      difficult: 200,\r\n      // 难度列表\r\n      diffData: [\r\n        { label: '简单', value: 200 },\r\n        { label: '正常', value: 100 },\r\n        { label: '快', value: 50 },\r\n        { label: '极快', value: 30 }\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    // 初始化\r\n    init() {\r\n      this.context = this.$refs.canvasDom.getContext('2d')\r\n      const canvas = this.$refs.canvasDom\r\n      this.width = canvas.clientWidth\r\n      this.height = canvas.clientHeight\r\n      this.row = this.width / this.lattice.w\r\n      this.col = this.height / this.lattice.h\r\n      canvas.width = this.width\r\n      canvas.height = this.height\r\n      this.context.fillRect(this.foodInfo.x, this.foodInfo.y, this.row, this.col)\r\n      this.addSnake()\r\n      this.addFood(this.context)\r\n      this.drawLine(this.context)\r\n      clearInterval(this.timer)\r\n      this.timer = setInterval(() => {\r\n        this.move(this.context, this.path)\r\n      }, this.difficult)\r\n    },\r\n    // 划线\r\n    drawLine(context = this.context) {\r\n      // 画row\r\n      for (let i = 0; i < this.lattice.w; i++) {\r\n        context.strokeStyle = this.isGrid ? '#ccc' : 'transparent'\r\n        context.lineWidth = 1\r\n        context.beginPath()\r\n        context.moveTo(0, this.row * i)\r\n        context.lineTo(this.width, this.row * i)\r\n        context.closePath()\r\n        context.stroke()\r\n      }\r\n      // 画col\r\n      for (let i = 0; i < this.lattice.h; i++) {\r\n        context.strokeStyle = this.isGrid ? '#ccc' : 'transparent'\r\n        context.lineWidth = 1\r\n        context.beginPath()\r\n        context.moveTo(this.col * i, 0)\r\n        context.lineTo(this.col * i, this.height)\r\n        context.closePath()\r\n        context.stroke()\r\n      }\r\n      // 画蛇\r\n      for (let i = 0; i < this.snakeCount; i++) {\r\n        context.fillStyle = '#000'\r\n        if (i === this.snakeCount - 1) context.fillStyle = '#f60'\r\n        context.fillRect(this.snake[i].x, this.snake[i].y, this.row, this.col)\r\n      }\r\n      // 画食物\r\n      context.beginPath()\r\n      context.fillStyle = 'black'\r\n      context.fillRect(this.foodInfo.x, this.foodInfo.y, this.row, this.col)\r\n      context.closePath()\r\n      context.fill()\r\n    },\r\n    // 添加食物\r\n    addFood(context) {\r\n      this.foodInfo = {\r\n        x: Math.floor(Math.random() * this.lattice.w) * this.row,\r\n        y: Math.floor(Math.random() * this.lattice.h) * this.col\r\n      }\r\n      let off = this.snake.some(item => {\r\n        return item.x === this.foodInfo.x && item.y === this.foodInfo.y\r\n      })\r\n      if (off) this.addFood(context)\r\n    },\r\n    // 添加蛇长度\r\n    addSnake() {\r\n      let y = Math.floor(Math.random() * this.lattice.h) * this.col\r\n      let x = Math.floor(Math.random() * this.lattice.w) * this.row\r\n      if (Math.random() > 0.5) {\r\n        this.path = 'toRight'\r\n        this.currentPath = 37\r\n        for (let i = 0; i < this.snakeCount; i++) {\r\n          this.snake.push({ x: i * this.row, y })\r\n        }\r\n      } else {\r\n        this.path = 'toBottom'\r\n        this.currentPath = 38\r\n        for (let i = 0; i < this.snakeCount; i++) {\r\n          this.snake.push({ x, y: i * this.col })\r\n        }\r\n      }\r\n    },\r\n    // 移动\r\n    move(context, path) {\r\n      const x = this.snake[this.snakeCount - 1].x\r\n      const y = this.snake[this.snakeCount - 1].y\r\n      switch (path) {\r\n        case 'toLeft':\r\n          if (this.isAI && this.AI(x - this.row, y)) return\r\n          this.snake.push({\r\n            x: x - this.row,\r\n            y: y\r\n          })\r\n          break\r\n        case 'toTop':\r\n          if (this.AI(x, y - this.col)) return\r\n          this.snake.push({\r\n            x: x,\r\n            y: y - this.col\r\n          })\r\n          break\r\n        case 'toRight':\r\n          if (this.isAI && this.AI(x + this.row, y)) return\r\n          this.snake.push({\r\n            x: x + this.row,\r\n            y: y\r\n          })\r\n          break\r\n        case 'toBottom':\r\n          if (this.isAI && this.AI(x, y + this.col)) return\r\n          this.snake.push({\r\n            x: x,\r\n            y: y + this.col\r\n          })\r\n          break\r\n        default:\r\n          break\r\n      }\r\n      this.snake.shift()\r\n      context.clearRect(0, 0, this.width, this.height)\r\n      this.isEat()\r\n      this.gameOver()\r\n      this.drawLine(context)\r\n    },\r\n    // 吃食物\r\n    isEat() {\r\n      const x = this.snake[this.snake.length - 1].x === this.foodInfo.x\r\n      const y = this.snake[this.snake.length - 1].y === this.foodInfo.y\r\n      if (x && y) {\r\n        this.addFood()\r\n        this.snakeCount++\r\n        this.snake.unshift({ x: -this.row, y: -this.col })\r\n      }\r\n    },\r\n    // 自动\r\n    AI(x, y) {\r\n      let off = this.snake.some(item => {\r\n        return item.x === x && item.y === y\r\n      })\r\n      if (off) {\r\n        if (this.path === 'toTop' || this.path === 'toBottom') {\r\n          if (x !== 0) this.path = 'toLeft'\r\n          if (x === 0) this.path = 'toRight'\r\n          return\r\n        }\r\n        if (this.path === 'toLeft' || this.path === 'toRight') {\r\n          if (y !== 0) this.path = 'toTop'\r\n          if (y === 0) this.path = 'toBottom'\r\n          return\r\n        }\r\n        return\r\n      }\r\n      if (x < 0 && y < 0) {\r\n        if (this.path === 'toTop') this.path = 'toRight'\r\n        if (this.path === 'toLeft') this.path = 'toBottom'\r\n        return\r\n      }\r\n      if (x < 0) {\r\n        if (y !== 0) {\r\n          if (y <= this.foodInfo.y && (this.path === 'toLeft' || this.path === 'toRight'))\r\n            this.path = 'toBottom'\r\n          if (y > this.foodInfo.y && (this.path === 'toLeft' || this.path === 'toRight'))\r\n            this.path = 'toTop'\r\n        }\r\n        if (y === 0) this.path = 'toBottom'\r\n        return true\r\n      }\r\n      if (x > this.width - this.row) {\r\n        if (y !== 0) {\r\n          if (y <= this.foodInfo.y && (this.path === 'toLeft' || this.path === 'toRight'))\r\n            this.path = 'toBottom'\r\n          if (y > this.foodInfo.y && (this.path === 'toLeft' || this.path === 'toRight'))\r\n            this.path = 'toTop'\r\n        }\r\n        if (y === 0) this.path = 'toBottom'\r\n        return true\r\n      }\r\n      if (y < 0) {\r\n        if (x !== 0) {\r\n          if (x <= this.foodInfo.x && (this.path === 'toTop' || this.path === 'toBottom'))\r\n            this.path = 'toRight'\r\n          if (x > this.foodInfo.x && (this.path === 'toTop' || this.path === 'toBottom'))\r\n            this.path = 'toLeft'\r\n        }\r\n        if (x === 0) this.path = 'toRight'\r\n        return true\r\n      }\r\n      if (y > this.height - this.col) {\r\n        if (x !== 0) {\r\n          if (x <= this.foodInfo.x && (this.path === 'toTop' || this.path === 'toBottom'))\r\n            this.path = 'toRight'\r\n          if (x > this.foodInfo.x && (this.path === 'toTop' || this.path === 'toBottom'))\r\n            this.path = 'toLeft'\r\n        }\r\n        if (x === 0) this.path = 'toRight'\r\n        return true\r\n      }\r\n      if (x === this.foodInfo.x) {\r\n        if (y <= this.foodInfo.y && (this.path === 'toLeft' || this.path === 'toRight'))\r\n          this.path = 'toBottom'\r\n        if (y > this.foodInfo.y && (this.path === 'toLeft' || this.path === 'toRight'))\r\n          this.path = 'toTop'\r\n        return false\r\n      }\r\n      if (y === this.foodInfo.y) {\r\n        if (x <= this.foodInfo.x && (this.path === 'toTop' || this.path === 'toBottom'))\r\n          this.path = 'toRight'\r\n        if (x > this.foodInfo.x && (this.path === 'toTop' || this.path === 'toBottom'))\r\n          this.path = 'toLeft'\r\n        return false\r\n      }\r\n      return false\r\n      // x <= 0 && y !== 0 ? path = 'toTop' : path = 'toBottom';\r\n      // x >= width && y !== 0 ? path = 'toTop' : path = 'toBottom';\r\n    },\r\n    // 按键\r\n    keyDown(ev) {\r\n      ev = ev || event\r\n      this.operating(ev.keyCode)\r\n    },\r\n    // 操作方法\r\n    operating(code) {\r\n      if (code === this.currentPath) return\r\n      switch (Number(code)) {\r\n        case 37:\r\n          this.path = 'toLeft'\r\n          this.currentPath = 39\r\n          break\r\n        case 38:\r\n          this.path = 'toTop'\r\n          this.currentPath = 40\r\n          break\r\n        case 39:\r\n          this.path = 'toRight'\r\n          this.currentPath = 37\r\n          break\r\n        case 40:\r\n          this.path = 'toBottom'\r\n          this.currentPath = 38\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    },\r\n    // 游戏结束\r\n    gameOver() {\r\n      let len = this.snake.length - 1\r\n      let off = this.snake.some((item, index) => {\r\n        return index !== len && this.snake[len].x === item.x && this.snake[len].y === item.y\r\n      })\r\n      if (\r\n        this.snake[len].x < 0 ||\r\n        this.snake[len].x >= this.width ||\r\n        this.snake[len].y < 0 ||\r\n        this.snake[len].y >= this.height\r\n      ) {\r\n        clearInterval(this.timer)\r\n        this.timer = null\r\n        this.$warning('撞墙了')\r\n        return true\r\n      }\r\n      if (off) {\r\n        clearInterval(this.timer)\r\n        this.timer = null\r\n        this.$warning('撞自己了')\r\n        return true\r\n      }\r\n      return false\r\n    },\r\n    // 重置\r\n    clear() {\r\n      clearInterval(this.timer)\r\n      this.timer = null\r\n      this.path = 'toRight'\r\n      this.snakeCount = 6\r\n      this.snake = []\r\n      this.foodInfo = { x: 0, y: 0 }\r\n      this.currentPath = 39\r\n      this.isAI = false\r\n    },\r\n    start() {\r\n      this.clear();\r\n      this.init()\r\n    }\r\n  },\r\n  mounted() {\r\n    if (!this.Utils.isPC()) {\r\n      let clientW = document.documentElement.clientWidth;\r\n      let clientH = document.documentElement.clientHeight;\r\n      let clientDis = clientW >= clientH ? clientH : clientW;\r\n      this.$refs.canvasDom.style.width = `${clientDis}px`;\r\n      this.$refs.canvasDom.style.height = `${clientDis}px`;\r\n      this.lattice = {\r\n        w: 30, h: 30\r\n      }\r\n    };\r\n    this.$nextTick(() => {\r\n      window.addEventListener('keydown', this.keyDown, true)\r\n    })\r\n  },\r\n  destroyed() {\r\n    this.clear()\r\n    window.removeEventListener('keydown', this.keyDown, true)\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.snake {\r\n  > .box {\r\n    width: fit-content;\r\n    height: fit-content;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    margin: auto;\r\n    h2,\r\n    p {\r\n      text-align: center;\r\n    }\r\n    > canvas {\r\n      display: block;\r\n      height: 600px;\r\n      width: 600px;\r\n      border-radius: 4px;\r\n      background-color: rgba(2155, 255, 255, 0.5);\r\n      box-shadow: 0 0 20px 2px rgba(0, 0, 0, 0.5);\r\n    }\r\n    > .btn {\r\n      padding-top: 20px;\r\n      width: fit-content;\r\n      margin: 0 auto;\r\n      /deep/ .select_wrapper {\r\n        width: 60px;\r\n      }\r\n    }\r\n    > .op {\r\n      width: fit-content;\r\n      margin: 0 auto;\r\n      padding-left: 20px;\r\n      display: flex;\r\n      text-align: center;\r\n      em {\r\n        display: block;\r\n        width: 50px;\r\n        height: 100px;\r\n        line-height: 100px;\r\n        background-color: #fff;\r\n        border: 1px solid #ccc;\r\n        box-sizing: border-box;\r\n      }\r\n      > span {\r\n        display: block;\r\n        width: 50px;\r\n        height: 100px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        > em {\r\n          width: 50px;\r\n          height: 50px;\r\n          line-height: 50px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./snake.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./snake.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./snake.vue?vue&type=template&id=ee50a626&scoped=true&\"\nimport script from \"./snake.vue?vue&type=script&lang=js&\"\nexport * from \"./snake.vue?vue&type=script&lang=js&\"\nimport style0 from \"./snake.vue?vue&type=style&index=0&id=ee50a626&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ee50a626\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}